; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--list -c --asm --interleave -o.\obj\stmflash.o --asm_dir=.\LST\ --list_dir=.\LST\ --depend=.\obj\stmflash.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\HAL -I..\HAL\STM32F10x_FWLib\inc -I..\Drivers -I..\Applications\IAP -I..\Applications\SYSTEM -ID:\Keil_v5\ARM\Packs\Keil\STM32F1xx_DFP\2.4.1\Device\Include -D__UVISION_VERSION=539 -DSTM32F10X_MD -DSTM32F10X_MD -DUSE_STDPERIPH_DRIVER --omf_browse=.\obj\stmflash.crf ..\Drivers\stmflash.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  STMFLASH_ReadHalfWord PROC
;;;20     //返回值:对应数据.
;;;21     u16 STMFLASH_ReadHalfWord(u32 faddr)
000000  4601              MOV      r1,r0
;;;22     {
;;;23     	return *(vu16*)faddr; 
000002  8808              LDRH     r0,[r1,#0]
;;;24     }
000004  4770              BX       lr
;;;25     #if STM32_FLASH_WREN	//如果使能了写   
                          ENDP

                  STMFLASH_Write_NoCheck PROC
;;;29     //NumToWrite:半字(16位)数   
;;;30     void STMFLASH_Write_NoCheck(u32 WriteAddr,u16 *pBuffer,u16 NumToWrite)   
000006  e92d41f0          PUSH     {r4-r8,lr}
;;;31     { 			 		 
00000a  4605              MOV      r5,r0
00000c  460e              MOV      r6,r1
00000e  4617              MOV      r7,r2
;;;32     	u16 i;
;;;33     	for(i=0;i<NumToWrite;i++)
000010  2400              MOVS     r4,#0
000012  e007              B        |L1.36|
                  |L1.20|
;;;34     	{
;;;35     		FLASH_ProgramHalfWord(WriteAddr,pBuffer[i]);
000014  f8361014          LDRH     r1,[r6,r4,LSL #1]
000018  4628              MOV      r0,r5
00001a  f7fffffe          BL       FLASH_ProgramHalfWord
;;;36     	    WriteAddr+=2;//地址增加2.
00001e  1cad              ADDS     r5,r5,#2
000020  1c60              ADDS     r0,r4,#1              ;33
000022  b284              UXTH     r4,r0                 ;33
                  |L1.36|
000024  42bc              CMP      r4,r7                 ;33
000026  dbf5              BLT      |L1.20|
;;;37     	}  
;;;38     }
000028  e8bd81f0          POP      {r4-r8,pc}
;;;39     //从指定地址开始写入指定长度的数据
                          ENDP

                  STMFLASH_Write PROC
;;;53     
;;;54     void STMFLASH_Write(u32 WriteAddr, u16 *pBuffer, u16 NumToWrite)
00002c  b570              PUSH     {r4-r6,lr}
;;;55     {    
00002e  4604              MOV      r4,r0
000030  460e              MOV      r6,r1
000032  4615              MOV      r5,r2
;;;56         if (WriteAddr < STM32_FLASH_BASE || (WriteAddr >= (STM32_FLASH_BASE + 1024 * STM32_FLASH_SIZE)))
000034  f1b46f00          CMP      r4,#0x8000000
000038  d302              BCC      |L1.64|
00003a  4822              LDR      r0,|L1.196|
00003c  4284              CMP      r4,r0
00003e  d300              BCC      |L1.66|
                  |L1.64|
;;;57             return;                               //非法地址
;;;58           
;;;59         /*开始写入*/
;;;60         FLASH_Unlock(); 
;;;61         while(1)
;;;62         {
;;;63             if(NumToWrite == 0)//上一个扇区刚好完整写完
;;;64             {
;;;65                 break;
;;;66             }
;;;67             else if(NumToWrite < (STM_SECTOR_SIZE / 2))//剩余要写入的内容不到一个扇区
;;;68             {
;;;69                 FLASH_ErasePage(WriteAddr); //擦除这个扇区  
;;;70                 STMFLASH_Write_NoCheck(WriteAddr, pBuffer, NumToWrite); 
;;;71                 break; //写入结束，结束while
;;;72             }
;;;73             else
;;;74             {
;;;75                 FLASH_ErasePage(WriteAddr); //擦除这个扇区
;;;76                 STMFLASH_Write_NoCheck(WriteAddr, pBuffer, STM_SECTOR_SIZE / 2); //写入整个扇区
;;;77                
;;;78                 WriteAddr += STM_SECTOR_SIZE;
;;;79                 pBuffer += STM_SECTOR_SIZE / 2;
;;;80                 NumToWrite -= STM_SECTOR_SIZE / 2;        
;;;81             }
;;;82         }
;;;83         FLASH_Lock(); //上锁
;;;84     }
000040  bd70              POP      {r4-r6,pc}
                  |L1.66|
000042  f7fffffe          BL       FLASH_Unlock
000046  e01d              B        |L1.132|
                  |L1.72|
000048  b905              CBNZ     r5,|L1.76|
00004a  e01c              B        |L1.134|
                  |L1.76|
00004c  f5b57f00          CMP      r5,#0x200             ;67
000050  da08              BGE      |L1.100|
000052  4620              MOV      r0,r4                 ;69
000054  f7fffffe          BL       FLASH_ErasePage
000058  462a              MOV      r2,r5                 ;70
00005a  4631              MOV      r1,r6                 ;70
00005c  4620              MOV      r0,r4                 ;70
00005e  f7fffffe          BL       STMFLASH_Write_NoCheck
000062  e010              B        |L1.134|
                  |L1.100|
000064  4620              MOV      r0,r4                 ;75
000066  f7fffffe          BL       FLASH_ErasePage
00006a  f44f7200          MOV      r2,#0x200             ;76
00006e  4631              MOV      r1,r6                 ;76
000070  4620              MOV      r0,r4                 ;76
000072  f7fffffe          BL       STMFLASH_Write_NoCheck
000076  f5046480          ADD      r4,r4,#0x400          ;78
00007a  f5066680          ADD      r6,r6,#0x400          ;79
00007e  f5a57000          SUB      r0,r5,#0x200          ;80
000082  b285              UXTH     r5,r0                 ;80
                  |L1.132|
000084  e7e0              B        |L1.72|
                  |L1.134|
000086  bf00              NOP                            ;65
000088  f7fffffe          BL       FLASH_Lock
00008c  bf00              NOP      
00008e  e7d7              B        |L1.64|
;;;85     #endif
                          ENDP

                  STMFLASH_Read PROC
;;;90     //NumToWrite:半字(16位)数
;;;91     void STMFLASH_Read(u32 ReadAddr,u16 *pBuffer,u16 NumToRead)   	
000090  b530              PUSH     {r4,r5,lr}
;;;92     {
000092  4603              MOV      r3,r0
000094  460c              MOV      r4,r1
000096  4615              MOV      r5,r2
;;;93     	u16 i;
;;;94     	for(i=0;i<NumToRead;i++)
000098  2200              MOVS     r2,#0
00009a  e007              B        |L1.172|
                  |L1.156|
;;;95     	{
;;;96     		pBuffer[i]=STMFLASH_ReadHalfWord(ReadAddr);//读取2个字节.
00009c  4618              MOV      r0,r3
00009e  f7fffffe          BL       STMFLASH_ReadHalfWord
0000a2  f8240012          STRH     r0,[r4,r2,LSL #1]
;;;97     		ReadAddr+=2;//偏移2个字节.	
0000a6  1c9b              ADDS     r3,r3,#2
0000a8  1c50              ADDS     r0,r2,#1              ;94
0000aa  b282              UXTH     r2,r0                 ;94
                  |L1.172|
0000ac  42aa              CMP      r2,r5                 ;94
0000ae  dbf5              BLT      |L1.156|
;;;98     	}
;;;99     }
0000b0  bd30              POP      {r4,r5,pc}
;;;100    
                          ENDP

                  Test_Write PROC
;;;103    //WriteData:要写入的数据
;;;104    void Test_Write(u32 WriteAddr,u16 WriteData)   	
0000b2  b513              PUSH     {r0,r1,r4,lr}
;;;105    {
0000b4  4604              MOV      r4,r0
;;;106    	STMFLASH_Write(WriteAddr,&WriteData,1);//写入一个字 
0000b6  2201              MOVS     r2,#1
0000b8  a901              ADD      r1,sp,#4
0000ba  4620              MOV      r0,r4
0000bc  f7fffffe          BL       STMFLASH_Write
;;;107    }
0000c0  bd1c              POP      {r2-r4,pc}
;;;108    
                          ENDP

0000c2  0000              DCW      0x0000
                  |L1.196|
                          DCD      0x08010000

                          AREA ||.bss||, DATA, NOINIT, ALIGN=1

                  STMFLASH_BUF
                          %        1024
