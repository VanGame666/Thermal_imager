; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--list -c --asm --interleave -o.\obj\timer.o --asm_dir=.\LST\ --list_dir=.\LST\ --depend=.\obj\timer.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\HAL -I..\HAL\STM32F10x_FWLib\inc -I..\Drivers -I..\Applications\IAP -I..\Applications\SYSTEM -ID:\Keil_v5\ARM\Packs\Keil\STM32F1xx_DFP\2.4.1\Device\Include -D__UVISION_VERSION=539 -DSTM32F10X_MD -DSTM32F10X_MD -DUSE_STDPERIPH_DRIVER --omf_browse=.\obj\timer.crf ..\Drivers\timer.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  TIM3_Int_Init PROC
;;;24     
;;;25     void TIM3_Int_Init(u16 arr,u16 psc)
000000  b57f              PUSH     {r0-r6,lr}
;;;26     {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;27         TIM_TimeBaseInitTypeDef  TIM_TimeBaseStructure;
;;;28     	NVIC_InitTypeDef NVIC_InitStructure;
;;;29     
;;;30     	RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM3, ENABLE); //时钟使能
000006  2101              MOVS     r1,#1
000008  2002              MOVS     r0,#2
00000a  f7fffffe          BL       RCC_APB1PeriphClockCmd
;;;31     	
;;;32     	//定时器TIM3初始化
;;;33     	TIM_TimeBaseStructure.TIM_Period = arr; //设置在下一个更新事件装入活动的自动重装载寄存器周期的值	
00000e  f8ad5008          STRH     r5,[sp,#8]
;;;34     	TIM_TimeBaseStructure.TIM_Prescaler =psc; //设置用来作为TIMx时钟频率除数的预分频值
000012  f8ad4004          STRH     r4,[sp,#4]
;;;35     	TIM_TimeBaseStructure.TIM_ClockDivision = TIM_CKD_DIV1; //设置时钟分割:TDTS = Tck_tim
000016  2000              MOVS     r0,#0
000018  f8ad000a          STRH     r0,[sp,#0xa]
;;;36     	TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;  //TIM向上计数模式
00001c  f8ad0006          STRH     r0,[sp,#6]
;;;37     	TIM_TimeBaseInit(TIM3, &TIM_TimeBaseStructure); //根据指定的参数初始化TIMx的时间基数单位
000020  a901              ADD      r1,sp,#4
000022  4816              LDR      r0,|L1.124|
000024  f7fffffe          BL       TIM_TimeBaseInit
;;;38      
;;;39     	TIM_ITConfig(TIM3,TIM_IT_Update,ENABLE ); //使能指定的TIM3中断,允许更新中断
000028  2201              MOVS     r2,#1
00002a  4611              MOV      r1,r2
00002c  4813              LDR      r0,|L1.124|
00002e  f7fffffe          BL       TIM_ITConfig
;;;40     
;;;41     	//中断优先级NVIC设置
;;;42     	NVIC_InitStructure.NVIC_IRQChannel = TIM3_IRQn;  //TIM3中断
000032  201d              MOVS     r0,#0x1d
000034  f88d0000          STRB     r0,[sp,#0]
;;;43     	NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0;  //先占优先级0级
000038  2000              MOVS     r0,#0
00003a  f88d0001          STRB     r0,[sp,#1]
;;;44     	NVIC_InitStructure.NVIC_IRQChannelSubPriority = 3;  //从优先级3级
00003e  2003              MOVS     r0,#3
000040  f88d0002          STRB     r0,[sp,#2]
;;;45     	NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE; //IRQ通道被使能
000044  2001              MOVS     r0,#1
000046  f88d0003          STRB     r0,[sp,#3]
;;;46     	NVIC_Init(&NVIC_InitStructure);  //初始化NVIC寄存器
00004a  4668              MOV      r0,sp
00004c  f7fffffe          BL       NVIC_Init
;;;47     
;;;48     
;;;49     	TIM_Cmd(TIM3, ENABLE);  //使能TIMx					 
000050  2101              MOVS     r1,#1
000052  480a              LDR      r0,|L1.124|
000054  f7fffffe          BL       TIM_Cmd
;;;50     }
000058  bd7f              POP      {r0-r6,pc}
;;;51     //定时器3中断服务程序
                          ENDP

                  TIM3_IRQHandler PROC
;;;52     void TIM3_IRQHandler(void)   //TIM3中断
00005a  b510              PUSH     {r4,lr}
;;;53     {
;;;54     	if (TIM_GetITStatus(TIM3, TIM_IT_Update) != RESET)  //检查TIM3更新中断发生与否
00005c  2101              MOVS     r1,#1
00005e  4807              LDR      r0,|L1.124|
000060  f7fffffe          BL       TIM_GetITStatus
000064  b140              CBZ      r0,|L1.120|
;;;55         {
;;;56             TIM_ClearITPendingBit(TIM3, TIM_IT_Update);  //清除TIMx更新中断标志 
000066  2101              MOVS     r1,#1
000068  4804              LDR      r0,|L1.124|
00006a  f7fffffe          BL       TIM_ClearITPendingBit
;;;57             TickMs++;
00006e  4804              LDR      r0,|L1.128|
000070  6800              LDR      r0,[r0,#0]  ; TickMs
000072  1c40              ADDS     r0,r0,#1
000074  4902              LDR      r1,|L1.128|
000076  6008              STR      r0,[r1,#0]  ; TickMs
                  |L1.120|
;;;58         }
;;;59     }
000078  bd10              POP      {r4,pc}
;;;60     
                          ENDP

00007a  0000              DCW      0x0000
                  |L1.124|
                          DCD      0x40000400
                  |L1.128|
                          DCD      TickMs

                          AREA ||.data||, DATA, ALIGN=2

                  TickMs
                          DCD      0x00000000
