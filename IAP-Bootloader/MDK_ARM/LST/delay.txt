; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--list -c --asm --interleave -o.\obj\delay.o --asm_dir=.\LST\ --list_dir=.\LST\ --depend=.\obj\delay.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\HAL -I..\HAL\STM32F10x_FWLib\inc -I..\Drivers -I..\Applications\IAP -I..\Applications\SYSTEM -ID:\Keil_v5\ARM\Packs\Keil\STM32F1xx_DFP\2.4.1\Device\Include -D__UVISION_VERSION=539 -DSTM32F10X_MD -DSTM32F10X_MD -DUSE_STDPERIPH_DRIVER --omf_browse=.\obj\delay.crf ..\Applications\SYSTEM\delay.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  delay_init PROC
;;;127    //SYSCLK:系统时钟
;;;128    void delay_init()
000000  b510              PUSH     {r4,lr}
;;;129    {
;;;130    #if SYSTEM_SUPPORT_OS  							//如果需要支持OS.
;;;131    	u32 reload;
;;;132    #endif
;;;133    	SysTick_CLKSourceConfig(SysTick_CLKSource_HCLK_Div8);	//选择外部时钟  HCLK/8
000002  f06f0004          MVN      r0,#4
000006  f7fffffe          BL       SysTick_CLKSourceConfig
;;;134    	fac_us=SystemCoreClock/8000000;				//为系统时钟的1/8  
00000a  482e              LDR      r0,|L1.196|
00000c  6800              LDR      r0,[r0,#0]  ; SystemCoreClock
00000e  492e              LDR      r1,|L1.200|
000010  fbb0f0f1          UDIV     r0,r0,r1
000014  492d              LDR      r1,|L1.204|
000016  7008              STRB     r0,[r1,#0]
;;;135    #if SYSTEM_SUPPORT_OS  							//如果需要支持OS.
;;;136    	reload=SystemCoreClock/8000000;				//每秒钟的计数次数 单位为K	   
;;;137    	reload*=1000000/delay_ostickspersec;		//根据delay_ostickspersec设定溢出时间
;;;138    												//reload为24位寄存器,最大值:16777216,在72M下,约合1.86s左右	
;;;139    	fac_ms=1000/delay_ostickspersec;			//代表OS可以延时的最少单位	   
;;;140    
;;;141    	SysTick->CTRL|=SysTick_CTRL_TICKINT_Msk;   	//开启SYSTICK中断
;;;142    	SysTick->LOAD=reload; 						//每1/delay_ostickspersec秒中断一次	
;;;143    	SysTick->CTRL|=SysTick_CTRL_ENABLE_Msk;   	//开启SYSTICK    
;;;144    
;;;145    #else
;;;146    	fac_ms=(u16)fac_us*1000;					//非OS下,代表每个ms需要的systick时钟数   
000018  4608              MOV      r0,r1
00001a  7800              LDRB     r0,[r0,#0]  ; fac_us
00001c  eb000140          ADD      r1,r0,r0,LSL #1
000020  ebc110c0          RSB      r0,r1,r0,LSL #7
000024  f64f71ff          MOV      r1,#0xffff
000028  ea0100c0          AND      r0,r1,r0,LSL #3
00002c  4928              LDR      r1,|L1.208|
00002e  8008              STRH     r0,[r1,#0]
;;;147    #endif
;;;148    }								    
000030  bd10              POP      {r4,pc}
;;;149    
                          ENDP

                  delay_us PROC
;;;191    //nus为要延时的us数.		    								   
;;;192    void delay_us(u32 nus)
000032  4601              MOV      r1,r0
;;;193    {		
;;;194    	u32 temp;	    	 
;;;195    	SysTick->LOAD=nus*fac_us; 					//时间加载	  		 
000034  4a25              LDR      r2,|L1.204|
000036  7812              LDRB     r2,[r2,#0]  ; fac_us
000038  434a              MULS     r2,r1,r2
00003a  f04f23e0          MOV      r3,#0xe000e000
00003e  615a              STR      r2,[r3,#0x14]
;;;196    	SysTick->VAL=0x00;        					//清空计数器
000040  2200              MOVS     r2,#0
000042  619a              STR      r2,[r3,#0x18]
;;;197    	SysTick->CTRL|=SysTick_CTRL_ENABLE_Msk ;	//开始倒数	  
000044  461a              MOV      r2,r3
000046  6912              LDR      r2,[r2,#0x10]
000048  f0420201          ORR      r2,r2,#1
00004c  611a              STR      r2,[r3,#0x10]
;;;198    	do
00004e  bf00              NOP      
                  |L1.80|
;;;199    	{
;;;200    		temp=SysTick->CTRL;
000050  f04f22e0          MOV      r2,#0xe000e000
000054  6910              LDR      r0,[r2,#0x10]
;;;201    	}while((temp&0x01)&&!(temp&(1<<16)));		//等待时间到达   
000056  f0000201          AND      r2,r0,#1
00005a  b11a              CBZ      r2,|L1.100|
00005c  f4003280          AND      r2,r0,#0x10000
000060  2a00              CMP      r2,#0
000062  d0f5              BEQ      |L1.80|
                  |L1.100|
;;;202    	SysTick->CTRL&=~SysTick_CTRL_ENABLE_Msk;	//关闭计数器
000064  f04f22e0          MOV      r2,#0xe000e000
000068  6912              LDR      r2,[r2,#0x10]
00006a  f0220201          BIC      r2,r2,#1
00006e  f04f23e0          MOV      r3,#0xe000e000
000072  611a              STR      r2,[r3,#0x10]
;;;203    	SysTick->VAL =0X00;      					 //清空计数器	 
000074  2200              MOVS     r2,#0
000076  619a              STR      r2,[r3,#0x18]
;;;204    }
000078  4770              BX       lr
;;;205    //延时nms
                          ENDP

                  delay_ms PROC
;;;210    //对72M条件下,nms<=1864 
;;;211    void delay_ms(u16 nms)
00007a  4601              MOV      r1,r0
;;;212    {	 		  	  
;;;213    	u32 temp;		   
;;;214    	SysTick->LOAD=(u32)nms*fac_ms;				//时间加载(SysTick->LOAD为24bit)
00007c  4a14              LDR      r2,|L1.208|
00007e  8812              LDRH     r2,[r2,#0]  ; fac_ms
000080  434a              MULS     r2,r1,r2
000082  f04f23e0          MOV      r3,#0xe000e000
000086  615a              STR      r2,[r3,#0x14]
;;;215    	SysTick->VAL =0x00;							//清空计数器
000088  2200              MOVS     r2,#0
00008a  619a              STR      r2,[r3,#0x18]
;;;216    	SysTick->CTRL|=SysTick_CTRL_ENABLE_Msk ;	//开始倒数  
00008c  461a              MOV      r2,r3
00008e  6912              LDR      r2,[r2,#0x10]
000090  f0420201          ORR      r2,r2,#1
000094  611a              STR      r2,[r3,#0x10]
;;;217    	do
000096  bf00              NOP      
                  |L1.152|
;;;218    	{
;;;219    		temp=SysTick->CTRL;
000098  f04f22e0          MOV      r2,#0xe000e000
00009c  6910              LDR      r0,[r2,#0x10]
;;;220    	}while((temp&0x01)&&!(temp&(1<<16)));		//等待时间到达   
00009e  f0000201          AND      r2,r0,#1
0000a2  b11a              CBZ      r2,|L1.172|
0000a4  f4003280          AND      r2,r0,#0x10000
0000a8  2a00              CMP      r2,#0
0000aa  d0f5              BEQ      |L1.152|
                  |L1.172|
;;;221    	SysTick->CTRL&=~SysTick_CTRL_ENABLE_Msk;	//关闭计数器
0000ac  f04f22e0          MOV      r2,#0xe000e000
0000b0  6912              LDR      r2,[r2,#0x10]
0000b2  f0220201          BIC      r2,r2,#1
0000b6  f04f23e0          MOV      r3,#0xe000e000
0000ba  611a              STR      r2,[r3,#0x10]
;;;222    	SysTick->VAL =0X00;       					//清空计数器	  	    
0000bc  2200              MOVS     r2,#0
0000be  619a              STR      r2,[r3,#0x18]
;;;223    } 
0000c0  4770              BX       lr
;;;224    #endif 
                          ENDP

0000c2  0000              DCW      0x0000
                  |L1.196|
                          DCD      SystemCoreClock
                  |L1.200|
                          DCD      0x007a1200
                  |L1.204|
                          DCD      fac_us
                  |L1.208|
                          DCD      fac_ms

                          AREA ||.data||, DATA, ALIGN=1

                  fac_us
000000  0000              DCB      0x00,0x00
                  fac_ms
000002  0000              DCW      0x0000
